---
import data from '../../data/bakers.json';
import {BakerModal} from './BakerModal.jsx';
---
<ul class="bakers">
    {data.map((baker) => (
        <li class="bakers-item">
            <div class="test">
                <img src={`/assets/${baker.bakerImage}.jpg`} class="bakers-item__image" alt="Profile picture of {baker.bakerName}">
            </div>

            <div>
                <h4>{baker.bakerName}, {baker.bakerAge}</h4>
                <h5>{baker.bakerJob}</h5>

                <dl>
                    <dt>Star Baker</dt>
                    <dd>{baker.starBaker}</dd>

                    <dt>Innuendo</dt>
                    <dd>{baker.bakerInnuendo}</dd>

                    <dt>Hollywood Handshake</dt>
                    <dd>{baker.hollywoodHandshake}</dd>
                </dl>

                <BakerModal client:load />
            </div>
        </li>
    ))}
</ul>

<svg class="svg">
    <clipPath id="my-clip-path" clipPathUnits="objectBoundingBox"><path d="M0,0.5 C0,0.29,0.29,0,0.5,0 S1,0.29,1,0.5 S0.71,1,0.5,1 S0,0.71,0,0.5"></path></clipPath>
</svg>

<style lang="scss">
    .bakers {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .bakers-item {
        border-radius: var(--base-radius);
        padding: 1rem;
    }

    .bakers-item__image {
        clip-path: url(#my-clip-path);
        object-fit: cover;
    }

    .test {
        position: relative;

        &:after {
            background-color: var(--color-primary);
            content: '';
            clip-path: url(#my-clip-path);
            display: block;
            height: 105%;
            left: .25rem;
            opacity: .5;
            position: absolute;
            top: .35rem;
            width: 105%;
            z-index: -1;
        }
    }

    .svg {
        height: 0;
        position: absolute;
        width: 0;
    }

    /**
 * 1. Make the dialog container, and its child overlay spread across
 *    the entire window.
 */
.dialog-container,
.dialog-overlay {
  position: fixed; /* 1 */
  top: 0; /* 1 */
  right: 0; /* 1 */
  bottom: 0; /* 1 */
  left: 0; /* 1 */
}

/**
 * 1. Make sure the dialog container and all its descendants sits on
 *    top of the rest of the page.
 * 2. Make the dialog container a flex container to easily center the
 *    dialog.
 */
.dialog-container {
  z-index: 2; /* 1 */
  display: flex; /* 2 */
}

/**
 * 1. Make sure the dialog container and all its descendants are not
 *    visible and not focusable when it is hidden.
 */
.dialog-container[aria-hidden='true'] {
  display: none; /* 1 */
}

/**
 * 1. Make the overlay look like an overlay.
 */
.dialog-overlay {
  background-color: rgba(43, 46, 56, 0.9); /* 1 */
}

/**
 * 1. Vertically and horizontally center the dialog in the page.
 * 2. Make sure the dialog sits on top of the overlay.
 * 3. Make sure the dialog has an opaque background.
 */
.dialog-content {
  margin: auto; /* 1 */
  z-index: 2; /* 2 */
  position: relative; /* 2 */
  background-color: white; /* 3 */
}

    @media (min-width: 768px) {
        .bakers {
            > :nth-child(2n) {
                justify-content: flex-end;
            }
        }
        .bakers-item {
            align-items: center;
            display: flex;

            > * + * {
                margin-left: 2rem;
            }

            img {
                max-width: 400px;
            }
        }
    }
</style>
